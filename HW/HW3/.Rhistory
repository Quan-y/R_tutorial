pattern_time <- '[0-9]+:[0-9]{2} PM'
time_grep <- grep(pattern_time, data)
matches_time <- gregexpr(pattern = pattern_time, text = data[time_grep])
time <- regmatches(data[time_grep], matches_time)
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">[@ | vs]'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">[@|vs]'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
# the date, the game time (ET), the opponent, and whether the game is home or away
# v & vi
data <- nets1819[64]
data <- strsplit(data, '<td class="Table2__td"><span>')[[1]][2:83]
# vii
pattern_date <- '[A-Za-z]{3}, [A-Za-z]{3} [0-9]+'
date_grep <- grep(pattern_date, data)
length(date_grep)
# viii date
matches_date <- gregexpr(pattern = pattern_date, text = data[date_grep])
date <- regmatches(data[date_grep], matches_date)
# ix
pattern_time <- '[0-9]+:[0-9]{2} PM'
time_grep <- grep(pattern_time, data)
matches_time <- gregexpr(pattern = pattern_time, text = data[time_grep])
time <- regmatches(data[time_grep], matches_time)
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">\@|vs'
# the date, the game time (ET), the opponent, and whether the game is home or away
# v & vi
data <- nets1819[64]
data <- strsplit(data, '<td class="Table2__td"><span>')[[1]][2:83]
# vii
pattern_date <- '[A-Za-z]{3}, [A-Za-z]{3} [0-9]+'
date_grep <- grep(pattern_date, data)
length(date_grep)
# viii date
matches_date <- gregexpr(pattern = pattern_date, text = data[date_grep])
date <- regmatches(data[date_grep], matches_date)
# ix
pattern_time <- '[0-9]+:[0-9]{2} PM'
time_grep <- grep(pattern_time, data)
matches_time <- gregexpr(pattern = pattern_time, text = data[time_grep])
time <- regmatches(data[time_grep], matches_time)
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">@|vs'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
homeaway_grep
length(homeaway_grep)
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">@|vs'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">vs|@'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
length(home)
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">[vs]|[@]'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
length(home)
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">vs|@'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_opponent <- "[a-z]+<!-- -->"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent
length(opponent)
length(data)
pattern_opponent <- "[a-z]+<!-- --> </a>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
length(opponent)
pattern_opponent <- "[a-z ]+<!-- --> </a>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent
pattern_opponent <- "[A-Za-z ]+<!-- --> </a>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent
pattern_opponent <- "[A-Za-z ]+<!-- --> </a></span>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent
pattern_opponent <- "[A-Za-z ]+<!-- --> </a></span></div></td>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent
length(opponent)
home
opponent
'abcdefg'[-4:]
"Miami<!-- --> </a></span></div></td>"[1:2]
"Miami<!-- --> </a></span></div></td>"[[1:2]]
str <- "Miami<!-- --> </a></span></div></td>"
str
str[1:2]
opponent
opponent[1]
opponent[2]
strsplit("New York<!-- --> </a></span></div></td>", "<!-- --> </a></span></div></td>")
apply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
apply(opponent, function x {strsplit(x, "<!-- --> </a></span></div></td>")})
apply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
apply(opponent, function(x){strsplit(x, "<!-- --> </a></span></div></td>")})
opponent
lapply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
sapply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
opponent <- sapply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
opponent[1]
opponent[2]
home
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">[vs@]'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">[vs@]'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">(vs)|@'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">[vs]|@'
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">[vs]|@'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
length(opponent)
length(time)
length(date)
length(opponent)
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">@|"vs"'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">{1,2}</span>'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
# ii Use the readLines() command we studied in class to load the NetsSchedule1819.html file into a character vector in R. Call the vector nets1819.
nets1819 <- readLines('NetsSchedule1819.html', warn = FALSE)
# ii (a) How many lines are in the NetsSchedule1819.html file?
cat('the number of lineas in NetsSchedule1819.html ', length(nets1819))
# ii (b) What is the total number of characters in the file?
cat('the total number of characters ', sum(nchar(nets1819)))
# ii (c) What is the maximum number of characters in a single line of the file?
cat('the maximum number of characters ', max(nchar(nets1819)))
# iii Open the webpage. You should see a table listing all the games scheduled for the 2018-2019 NBA season. There are a total of 82 regular season games scheduled. Who and when are they playing first? Who and when are they playing last?
cat('First: Detroit 7:00PM Wed, Apr 10, 2018')
cat('Last: Miami 8:00PM Wed, Apr 10, 2018')
# iv Open NetsSchedule1819.html using your browser and again look at its source code. What line in the file holds information about the game of the regular season (date, time, opponent)? It may be helpful to use CTRL-F or COMMAND-F here and also work between the file in R and in the text editor.
cat('Line 64 contains all the information including date, time and opponent')
nets1819 <- readLines('NetsSchedule1819.html', warn = FALSE)
cat('the number of lineas in NetsSchedule1819.html ', length(nets1819))
cat('the total number of characters ', sum(nchar(nets1819)))
cat('the maximum number of characters ', max(nchar(nets1819)))
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">{1,2}</span>vs|@\'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
1
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class=\"flex items-center opponent-logo"> <span class=\"pr2\">{1,2}</span>vs|@'
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
# x home(vs) or away(@)
# home
pattern_homeaway <- '<div class=\"flex items-center opponent-logo"> <span class=\"pr2\">{1,2}</span>vs|@'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<div class=\"flex items-center opponent-logo"> <span class=\"pr2\">{1,2}</span>vs|@'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<div class=\"flex items-center opponent-logo"> <span class=\"pr2\">{1,2}</span>(vs)|@'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">{1,2}</span>(@|vs)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<div class="flex items-center opponent-logo"> <span class="pr2">{1,2}</span>(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<div class=\"flex items-center opponent-logo\"> <span class=\"pr2\">{1,2}</span>(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
home <- sapply(home, function (x) {strsplit(x, "<span class=\"pr2\">")})
home
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home
home[1]
home <- sapply(home, function (x) {strsplit(x, "<span class='pr2'>")})
home
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home <- sapply(home, function (x) {strsplit(x, "<span class='pr2'>")})
home
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home <- sapply(home, function (x) {strsplit(x, '<span class=\"pr2\">')})
home
home[1]
home[1][1]
home[1][2]
home[1][[2]]
home[1]
home[1][2]
home[1][[2]]
home
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home[1]
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home <- ifelse(home == "<span class=\"pr2\">vs", 1, 0)
home
length(home)
# xii dataframe
df <- data.frame(date, time, opponent, home)
head(df, 4)
# xii dataframe
df <- data.frame(c(date, time, opponent, home))
df
opponent
c(opponent)
opponent
date
time
home
mode(home)
typeof(home)
home[1]
home[2]
opponent
t(opponent)
t(opponent)
# xii dataframe
df <- data.frame(date, time, opponent, home)
# the date, the game time (ET), the opponent, and whether the game is home or away
data <- nets1819[64]
data <- strsplit(data, '<td class="Table2__td"><span>')[[1]][2:83]
# vii
pattern_date <- '[A-Za-z]{3}, [A-Za-z]{3} [0-9]+'
date_grep <- grep(pattern_date, data)
cat(length(date_grep))
# viii date
matches_date <- gregexpr(pattern = pattern_date, text = data[date_grep])
date <- regmatches(data[date_grep], matches_date)
# ix time
pattern_time <- '[0-9]+:[0-9]{2} PM'
time_grep <- grep(pattern_time, data)
matches_time <- gregexpr(pattern = pattern_time, text = data[time_grep])
time <- regmatches(data[time_grep], matches_time)
# x home(vs) or away(@)
# home
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home <- ifelse(home == "<span class=\"pr2\">vs", 1, 0)
# xi opponent
pattern_opponent <- "[A-Za-z ]+<!-- --> </a></span></div></td>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent <- sapply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
# xii dataframe
df <- data.frame(date, time, opponent, home)
head(df, 1)
nets1819 <- readLines('NetsSchedule1819.html', warn = FALSE)
cat('the number of lineas in NetsSchedule1819.html ', length(nets1819))
cat('the total number of characters ', sum(nchar(nets1819)))
cat('the maximum number of characters ', max(nchar(nets1819)))
getwd
getwd()
setwd("F:\Columbia\2018Fall\R_tutorial\HW\HW3\NetsSchedule1819.html")
setwd("F:\Columbia\2018Fall\R_tutorial\HW\HW3")
setwd("F:")
getwd()
setwd("F:\Columbia\2018Fall\R_tutorial\HW\HW3")
setwd("F:/Columbia/2018Fall/R_tutorial/HW/HW3")
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Read Data
nets1819 <- readLines("NetsSchedule1819.html")
getwd
getwd()
nets1819 <- readLines('NetsSchedule1819.html', warn = FALSE)
cat('the number of lineas in NetsSchedule1819.html ', length(nets1819))
cat('the total number of characters ', sum(nchar(nets1819)))
cat('the maximum number of characters ', max(nchar(nets1819)))
# Read Data
nets1819 <- readLines('NetsSchedule1819.html', warn = FALSE)
nets1819 <- readLines('NetsSchedule1819.html', warn = FALSE)
cat('the number of lineas in NetsSchedule1819.html ', length(nets1819))
cat('the total number of characters ', sum(nchar(nets1819)))
cat('the maximum number of characters ', max(nchar(nets1819)))
cat('First: Detroit 7:00PM Wed, Apr 10, 2018')
cat('Last: Miami 8:00PM Wed, Apr 10, 2018')
cat('First: Detroit 7:00PM Wed, Apr 10')
cat('Last: Miami 8:00PM Wed, Apr 10')
cat('Line 64 contains all the information including date, time and opponent')
data_pattern <- "Wed, Oct 17"
data <- nets1819[grep(line_pattern, nets1819)]
# we use the date "Wed, Oct 17" to index the line
data_pattern <- "Wed, Oct 17"
data <- nets1819[grep(data_pattern, nets1819)]
data <- nets1819[64]
data1 <- nets1819[64]
data <- nets1819[grep(data_pattern, nets1819)]
identical(data, data1)
# we use <td class="Table2__td"><span>') to split the whole string
# since the first element is irrelevant
data <- strsplit(data, '<td class="Table2__td"><span>')[[1]][2:83]
cat('The length of the data is ', length(data))
# viii date
matches_date <- gregexpr(pattern = pattern_date, text = data[date_grep])
date <- regmatches(data[date_grep], matches_date)
# time
pattern_time <- '[0-9]+:[0-9]{2} PM'
time_grep <- grep(pattern_time, data)
matches_time <- gregexpr(pattern = pattern_time, text = data[time_grep])
time <- regmatches(data[time_grep], matches_time)
# home(vs) or away(@)
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home <- ifelse(home == "<span class=\"pr2\">vs", 1, 0)
# xi opponent
pattern_opponent <- "[A-Za-z ]+<!-- --> </a></span></div></td>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent <- sapply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
# xii dataframe
df <- data.frame(date, time, opponent, home)
head(df, 2)
head(df, 2)
mode(opponent)
nets1819 <- readLines('NetsSchedule1819.html', warn = FALSE)
cat('the number of lineas in NetsSchedule1819.html ', length(nets1819))
cat('the total number of characters ', sum(nchar(nets1819)))
cat('the maximum number of characters ', max(nchar(nets1819)))
cat('First: Detroit 7:00PM Wed, Oct 17')
cat('Last: Miami 8:00PM Wed, Apr 10')
cat('Line 64 contains all the information including date, time and opponent')
# we use the date "Wed, Oct 17" to index the line
data_pattern <- "Wed, Oct 17"
data <- nets1819[grep(data_pattern, nets1819)]
# we use <td class="Table2__td"><span>') to split the whole string
# since the first element is irrelevant
data <- strsplit(data, '<td class="Table2__td"><span>')[[1]][2:83]
cat('The length of the data is ', length(data))
pattern_date <- '[A-Za-z]{3}, [A-Za-z]{3} [0-9]{1,2}'
date_grep <- grep(pattern_date, data)
cat(length(date_grep))
# viii date
matches_date <- gregexpr(pattern = pattern_date, text = data[date_grep])
date <- regmatches(data[date_grep], matches_date)
date <- unlist(date, use.names = FALSE)
# time
pattern_time <- '[0-9]+:[0-9]{2} PM'
time_grep <- grep(pattern_time, data)
matches_time <- gregexpr(pattern = pattern_time, text = data[time_grep])
time <- regmatches(data[time_grep], matches_time)
time <- unlist(time, use.names = FALSE)
# home(vs) or away(@)
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home <- ifelse(home == "<span class=\"pr2\">vs", 1, 0)
# xi opponent
pattern_opponent <- "[A-Za-z ]+<!-- --> </a></span></div></td>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent <- sapply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
opponent <- unlist(opponent, use.names = FALSE)
# xii dataframe
df <- data.frame(date, time, opponent, home)
head(df, 3)
data[1]
cat('Match: ', regmatches(data[1], regexpr(pattern_date, data[date_grep[1]])) == "Wed, Oct 17")
date_grep[1]
date_grep[2]
date_grep[3]
# first game
cat('First game Match: ', regmatches(data[1], regexpr(pattern_date, data[1])) == "Wed, Oct 17")
# first game
cat('Last game Match: ', regmatches(data[82], regexpr(pattern_date, data[82])) == "Wed, Apr 10")
nets1819 <- readLines('NetsSchedule1819.html', warn = FALSE)
cat('the number of lineas in NetsSchedule1819.html ', length(nets1819))
cat('the total number of characters ', sum(nchar(nets1819)))
cat('the maximum number of characters ', max(nchar(nets1819)))
cat('First: Detroit 7:00PM Wed, Oct 17')
cat('Last: Miami 8:00PM Wed, Apr 10')
cat('Line 64 contains all the information including date, time and opponent')
# we use the date "Wed, Oct 17" to index the line
data_pattern <- "Wed, Oct 17"
data <- nets1819[grep(data_pattern, nets1819)]
# we use <td class="Table2__td"><span>') to split the whole string
# since the first element is irrelevant
data <- strsplit(data, '<td class="Table2__td"><span>')[[1]][2:83]
cat('The length of the data is ', length(data))
pattern_date <- '[A-Za-z]{3}, [A-Za-z]{3} [0-9]{1,2}'
date_grep <- grep(pattern_date, data)
cat('The length of data after grep: ',length(date_grep))
# check
# first game
cat('First game Match: ', regmatches(data[1], regexpr(pattern_date, data[1])) == "Wed, Oct 17")
# first game
cat('Last game Match: ', regmatches(data[82], regexpr(pattern_date, data[82])) == "Wed, Apr 10")
# viii date
matches_date <- gregexpr(pattern = pattern_date, text = data[date_grep])
date <- regmatches(data[date_grep], matches_date)
date <- unlist(date, use.names = FALSE)
date
# time
pattern_time <- '[0-9]+:[0-9]{2} PM'
time_grep <- grep(pattern_time, data)
matches_time <- gregexpr(pattern = pattern_time, text = data[time_grep])
time <- regmatches(data[time_grep], matches_time)
time <- unlist(time, use.names = FALSE)
time
# home(vs) or away(@)
pattern_homeaway <- '<span class=\"pr2\">(vs|@)'
homeaway_grep <- grep(pattern_homeaway, data)
matches_time <- gregexpr(pattern = pattern_homeaway, text = data[homeaway_grep])
home <- regmatches(data[homeaway_grep], matches_time)
home <- ifelse(home == "<span class=\"pr2\">vs", 1, 0)
home
# xi opponent
pattern_opponent <- "[A-Za-z ]+<!-- --> </a></span></div></td>"
opponent_grep <- grep(pattern_opponent, data)
matches_opponent <- gregexpr(pattern = pattern_opponent, text = data[opponent_grep])
opponent <- regmatches(data[opponent_grep], matches_opponent)
opponent <- sapply(opponent, function (x) {strsplit(x, "<!-- --> </a></span></div></td>")})
opponent <- unlist(opponent, use.names = FALSE)
opponent
# xii dataframe
df <- data.frame(date, time, opponent, home)
head(df, 10)
